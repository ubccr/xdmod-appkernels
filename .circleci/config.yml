version: 2.1

executors:
  rocky8: &rocky8-executor
    docker:
      - image: tools-ext-01.ccr.xdmod.org/xdmod-10.5.0-x86_64:rockylinux8.5-0.3

jobs:
  build:
    parameters:
      os:
        type: executor
      install-type:
        type: string
    executor: << parameters.os >>
    environment:
      COMPOSER_ALLOW_SUPERUSER: 1
      XDMOD_REALMS: 'jobs,storage,cloud'
      XDMOD_BRANCH: xdmod11.0
      XDMOD_MODULE_NAME: appkernels
      XDMOD_IS_CORE: yes
      XDMOD_INSTALL_DIR: /xdmod
      XDMOD_TEST_MODE: << parameters.install-type >>
    steps:
      - run:
          name: Enable PHP 7.4 module
          command: dnf module -y reset php && dnf module -y enable php:7.4
      - run:
          name: Install PHP 7.4 and PHP module pre-reqs & an updated version of PHP Pear
          command: dnf install -y php libzip-devel php-pear php-devel
      - run:
           name: Install MongoDB Pear module
           command: yes '' | pecl install mongodb || true
      - run:
          name: Install Python3
          command: dnf -y install --setopt=tsflags=nodocs python3
      - run:
          name: Generate OpenSSL Key
          command: openssl genrsa -rand /proc/cpuinfo:/proc/dma:/proc/filesystems:/proc/interrupts:/proc/ioports:/proc/uptime 2048 > /etc/pki/tls/private/localhost.key
      - run:
          name: Generate Certificate
          command: /usr/bin/openssl req -new -key /etc/pki/tls/private/localhost.key -x509 -sha256 -days 365 -set_serial $RANDOM -extensions v3_req -out /etc/pki/tls/certs/localhost.crt -subj "/C=XX/L=Default City/O=Default Company Ltd"
      - checkout
      - run:
          name: Create Test Result Directory
          command: mkdir -p ./shippable/testresults
      - run:
          name: Setup Environment Variables
          command: |
            echo "export XDMOD_APPKERNEL_DIR=$HOME/project" >> $BASH_ENV
            echo "export XDMOD_SOURCE_DIR=$HOME/xdmod" >> $BASH_ENV
      - run:
          name: Setup & Run Tests
          command: ./tests/runtests.sh
      - run:
          name: Ensure that no unexpected Apache errors were generated
          command: test ! -e /var/log/php-fpm/www-error.log
      - run:
          name: Ensure that no PHP command-line errors were generated
          command: >
            if [ -e /var/log/php_errors.log ]; then
                test `egrep -v "PHP Deprecated.*vendor\/.*|PHP Notice:  fread()|phpunit.*" /var/log/php_errors.log | wc -l` = 0;
            fi
      - store_artifacts:
          path: /tmp/screenshots
      - store_artifacts:
          path: /var/log/xdmod
      - store_artifacts:
          path: /var/log/php-fpm
      - store_artifacts:
          path: /var/log/php_errors.log
      - store_test_results:
          path: ./shippable/testresults

workflows:
  full-build:
    jobs:
      - build:
          matrix:
            parameters:
              os: [rocky8]
              install-type: ["fresh_install", "upgrade"]
